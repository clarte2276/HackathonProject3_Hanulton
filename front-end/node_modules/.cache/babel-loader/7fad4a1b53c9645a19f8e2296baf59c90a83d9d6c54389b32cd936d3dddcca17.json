{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";const useUserData=function(){let initialData=arguments.length>0&&arguments[0]!==undefined?arguments[0]:{};const[name,setName]=useState(initialData.name||\"\");const[nickname,setNickname]=useState(initialData.nickname||\"\");const[birth,setBirth]=useState(initialData.birth||\"\");const[id,setId]=useState(initialData.id||\"\");const[password,setPassword]=useState(initialData.password||\"\");const[store,setStore]=useState(initialData.store||\"\");const fetchUserData=async()=>{try{// 사용자가 로그인한 후 호출 (유저정보 가져오기)\nconst response=await axios.post(\"/mypage\",{},{withCredentials:true});const userData=response.data;setName(userData.name||\"\");setNickname(userData.nickname||\"\");setBirth(userData.birth||\"\");setId(userData.id||\"\");// 아이디 값 변경 불가\nsetPassword(userData.password||\"\");setStore(userData.store||\"\");}catch(error){console.error(\"사용자 데이터를 가져오는 중 오류 발생:\",error);}};// 초기 유저정보 가져옴\nuseEffect(()=>{fetchUserData();},[]);const handleSave=async()=>{try{const updateData={name,nickname,birth,id,password,store};// 정보 수정 시 데이터 전달 경로\nconsole.log(\"Sending update data:\",updateData);const response=await axios.post(\"/mypage/process/update\",updateData);if(response.status===200){alert(\"변경사항이 저장되었습니다.\");}else{fetchUserData();// 변경사항 저장 후 유저정보를 다시 불러옴\nthrow new Error(response.data.message);}}catch(error){console.error(\"변경사항을 저장하는 데 오류가 발생했습니다:\",error);alert(\"변경사항을 저장하는 데 오류가 발생했습니다.\");}};return{name,nickname,birth,id,password,store,setName,setNickname,setBirth,setId,setPassword,setStore,handleSave,fetchUserData};};export default useUserData;","map":{"version":3,"names":["React","useState","useEffect","axios","useUserData","initialData","arguments","length","undefined","name","setName","nickname","setNickname","birth","setBirth","id","setId","password","setPassword","store","setStore","fetchUserData","response","post","withCredentials","userData","data","error","console","handleSave","updateData","log","status","alert","Error","message"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/HackathonProject3_Hanulton/front-end/src/components/useUserData.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nconst useUserData = (initialData = {}) => {\r\n  const [name, setName] = useState(initialData.name || \"\");\r\n  const [nickname, setNickname] = useState(initialData.nickname || \"\");\r\n  const [birth, setBirth] = useState(initialData.birth || \"\");\r\n  const [id, setId] = useState(initialData.id || \"\");\r\n  const [password, setPassword] = useState(initialData.password || \"\");\r\n  const [store, setStore] = useState(initialData.store || \"\");\r\n\r\n  const fetchUserData = async () => {\r\n    try {\r\n      // 사용자가 로그인한 후 호출 (유저정보 가져오기)\r\n      const response = await axios.post(\r\n        \"/mypage\",\r\n        {},\r\n        { withCredentials: true }\r\n      );\r\n      const userData = response.data;\r\n\r\n      setName(userData.name || \"\");\r\n      setNickname(userData.nickname || \"\");\r\n      setBirth(userData.birth || \"\");\r\n      setId(userData.id || \"\"); // 아이디 값 변경 불가\r\n      setPassword(userData.password || \"\");\r\n      setStore(userData.store || \"\");\r\n    } catch (error) {\r\n      console.error(\"사용자 데이터를 가져오는 중 오류 발생:\", error);\r\n    }\r\n  };\r\n\r\n  // 초기 유저정보 가져옴\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  const handleSave = async () => {\r\n    try {\r\n      const updateData = {\r\n        name,\r\n        nickname,\r\n        birth,\r\n        id,\r\n        password,\r\n        store,\r\n      };\r\n\r\n      // 정보 수정 시 데이터 전달 경로\r\n      console.log(\"Sending update data:\", updateData);\r\n      const response = await axios.post(\"/mypage/process/update\", updateData);\r\n\r\n      if (response.status === 200) {\r\n        alert(\"변경사항이 저장되었습니다.\");\r\n      } else {\r\n        fetchUserData(); // 변경사항 저장 후 유저정보를 다시 불러옴\r\n        throw new Error(response.data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"변경사항을 저장하는 데 오류가 발생했습니다:\", error);\r\n      alert(\"변경사항을 저장하는 데 오류가 발생했습니다.\");\r\n    }\r\n  };\r\n\r\n  return {\r\n    name,\r\n    nickname,\r\n    birth,\r\n    id,\r\n    password,\r\n    store,\r\n    setName,\r\n    setNickname,\r\n    setBirth,\r\n    setId,\r\n    setPassword,\r\n    setStore,\r\n    handleSave,\r\n    fetchUserData,\r\n  };\r\n};\r\n\r\nexport default useUserData;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}