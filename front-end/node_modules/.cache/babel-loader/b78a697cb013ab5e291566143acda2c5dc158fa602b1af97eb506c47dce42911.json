{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useNavigate}from'react-router-dom';import'./Login.css';import axios from'axios';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function Login(){const navigate=useNavigate();const[id,setId]=useState('');const[password,setPassword]=useState('');const handleSubmit=async event=>{event.preventDefault();try{const response=await axios.post('/loginpage/process/login',{id,password});const data=response.data;if(data.success){alert('로그인 성공!');navigate('/');// 로그인 성공 시 메인페이지 이동\n}else{alert(data.message);}}catch(error){console.error('로그인 요청 중 오류 발생:',error);alert('로그인 요청 중 오류가 발생했습니다.');}};return/*#__PURE__*/_jsxs(\"div\",{className:\"loginPage\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsxs(\"form\",{className:\"loginPagecontent\",onSubmit:handleSubmit,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"textBox\",children:[/*#__PURE__*/_jsx(\"p\",{className:\"idBox\",children:\"\\uC544\\uC774\\uB514\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",name:\"id\",value:id,onChange:e=>setId(e.target.value)}),/*#__PURE__*/_jsx(\"p\",{className:\"pwBox\",children:\"\\uBE44\\uBC00\\uBC88\\uD638\"}),/*#__PURE__*/_jsx(\"input\",{type:\"password\",name:\"password\",value:password,onChange:e=>setPassword(e.target.value)})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"btnContent\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"loginpageBtn\",children:\"\\uB85C\\uADF8\\uC778\"}),/*#__PURE__*/_jsx(\"button\",{className:\"signuppageBtn\",children:/*#__PURE__*/_jsx(Link,{to:\"/signuppage\",className:\"signupLink\",children:\"\\uD68C\\uC6D0\\uAC00\\uC785\"})})]})]})]});}export default Login;","map":{"version":3,"names":["React","useState","useEffect","Link","useNavigate","axios","jsx","_jsx","jsxs","_jsxs","Login","navigate","id","setId","password","setPassword","handleSubmit","event","preventDefault","response","post","data","success","alert","message","error","console","className","children","onSubmit","type","name","value","onChange","e","target","to"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/HackathonProject3_Hanulton/front-end/src/components/mypage/Login.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useNavigate } from 'react-router-dom';\r\nimport './Login.css';\r\nimport axios from 'axios';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [id, setId] = useState('');\r\n  const [password, setPassword] = useState('');\r\n\r\n  const handleSubmit = async (event) => {\r\n    event.preventDefault();\r\n    try {\r\n      const response = await axios.post('/loginpage/process/login', {\r\n        id,\r\n        password,\r\n      });\r\n      const data = response.data;\r\n\r\n      if (data.success) {\r\n        alert('로그인 성공!');\r\n        navigate('/'); // 로그인 성공 시 메인페이지 이동\r\n      } else {\r\n        alert(data.message);\r\n      }\r\n    } catch (error) {\r\n      console.error('로그인 요청 중 오류 발생:', error);\r\n      alert('로그인 요청 중 오류가 발생했습니다.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"loginPage\">\r\n      <h1>로그인</h1>\r\n      <form className=\"loginPagecontent\" onSubmit={handleSubmit}>\r\n        <div className=\"textBox\">\r\n          <p className=\"idBox\">아이디</p>\r\n          <input type=\"text\" name=\"id\" value={id} onChange={(e) => setId(e.target.value)} />\r\n          <p className=\"pwBox\">비밀번호</p>\r\n          <input type=\"password\" name=\"password\" value={password} onChange={(e) => setPassword(e.target.value)} />\r\n        </div>\r\n        <div className=\"btnContent\">\r\n          <button type=\"submit\" className=\"loginpageBtn\">\r\n            로그인\r\n          </button>\r\n          <button className=\"signuppageBtn\">\r\n            <Link to=\"/signuppage\" className=\"signupLink\">\r\n              회원가입\r\n            </Link>\r\n          </button>\r\n        </div>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,IAAI,CAAEC,WAAW,KAAQ,kBAAkB,CACpD,MAAO,aAAa,CACpB,MAAO,CAAAC,KAAK,KAAM,OAAO,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAE1B,QAAS,CAAAC,KAAKA,CAAA,CAAG,CACf,KAAM,CAAAC,QAAQ,CAAGP,WAAW,CAAC,CAAC,CAC9B,KAAM,CAACQ,EAAE,CAAEC,KAAK,CAAC,CAAGZ,QAAQ,CAAC,EAAE,CAAC,CAChC,KAAM,CAACa,QAAQ,CAAEC,WAAW,CAAC,CAAGd,QAAQ,CAAC,EAAE,CAAC,CAE5C,KAAM,CAAAe,YAAY,CAAG,KAAO,CAAAC,KAAK,EAAK,CACpCA,KAAK,CAACC,cAAc,CAAC,CAAC,CACtB,GAAI,CACF,KAAM,CAAAC,QAAQ,CAAG,KAAM,CAAAd,KAAK,CAACe,IAAI,CAAC,0BAA0B,CAAE,CAC5DR,EAAE,CACFE,QACF,CAAC,CAAC,CACF,KAAM,CAAAO,IAAI,CAAGF,QAAQ,CAACE,IAAI,CAE1B,GAAIA,IAAI,CAACC,OAAO,CAAE,CAChBC,KAAK,CAAC,SAAS,CAAC,CAChBZ,QAAQ,CAAC,GAAG,CAAC,CAAE;AACjB,CAAC,IAAM,CACLY,KAAK,CAACF,IAAI,CAACG,OAAO,CAAC,CACrB,CACF,CAAE,MAAOC,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,iBAAiB,CAAEA,KAAK,CAAC,CACvCF,KAAK,CAAC,sBAAsB,CAAC,CAC/B,CACF,CAAC,CAED,mBACEd,KAAA,QAAKkB,SAAS,CAAC,WAAW,CAAAC,QAAA,eACxBrB,IAAA,OAAAqB,QAAA,CAAI,oBAAG,CAAI,CAAC,cACZnB,KAAA,SAAMkB,SAAS,CAAC,kBAAkB,CAACE,QAAQ,CAAEb,YAAa,CAAAY,QAAA,eACxDnB,KAAA,QAAKkB,SAAS,CAAC,SAAS,CAAAC,QAAA,eACtBrB,IAAA,MAAGoB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,oBAAG,CAAG,CAAC,cAC5BrB,IAAA,UAAOuB,IAAI,CAAC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACC,KAAK,CAAEpB,EAAG,CAACqB,QAAQ,CAAGC,CAAC,EAAKrB,KAAK,CAACqB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,cAClFzB,IAAA,MAAGoB,SAAS,CAAC,OAAO,CAAAC,QAAA,CAAC,0BAAI,CAAG,CAAC,cAC7BrB,IAAA,UAAOuB,IAAI,CAAC,UAAU,CAACC,IAAI,CAAC,UAAU,CAACC,KAAK,CAAElB,QAAS,CAACmB,QAAQ,CAAGC,CAAC,EAAKnB,WAAW,CAACmB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE,CAAE,CAAC,EACrG,CAAC,cACNvB,KAAA,QAAKkB,SAAS,CAAC,YAAY,CAAAC,QAAA,eACzBrB,IAAA,WAAQuB,IAAI,CAAC,QAAQ,CAACH,SAAS,CAAC,cAAc,CAAAC,QAAA,CAAC,oBAE/C,CAAQ,CAAC,cACTrB,IAAA,WAAQoB,SAAS,CAAC,eAAe,CAAAC,QAAA,cAC/BrB,IAAA,CAACJ,IAAI,EAACiC,EAAE,CAAC,aAAa,CAACT,SAAS,CAAC,YAAY,CAAAC,QAAA,CAAC,0BAE9C,CAAM,CAAC,CACD,CAAC,EACN,CAAC,EACF,CAAC,EACJ,CAAC,CAEV,CAEA,cAAe,CAAAlB,KAAK","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}