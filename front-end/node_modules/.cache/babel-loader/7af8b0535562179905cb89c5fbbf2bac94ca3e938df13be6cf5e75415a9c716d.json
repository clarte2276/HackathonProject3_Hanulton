{"ast":null,"code":"import React,{useState,useEffect}from'react';import{Link,useLocation}from'react-router-dom';import axios from'axios';import TitleBodyBoard from'./element/TitleBodyBoard';import ListBoard from'./element/ListBoard';import ColumnListBoard from'./element/ColumnListBoard';import RowListBoard from'./element/RowListBoard';import CreateButtonBoard from'./element/CreateButtonBoard';import PaginationCustom from'./element/PaginationCustom';import NavbarTop from'../Navbar/NavbarTop';import'./Board.css';import{jsx as _jsx,jsxs as _jsxs,Fragment as _Fragment}from\"react/jsx-runtime\";const BoardSell=()=>{const[dataList,setDataList]=useState([]);const[currentPage,setCurrentPage]=useState(1);const[searchKeyword,setSearchKeyword]=useState('');const postsPerPage=10;const location=useLocation();const fetchData=async function(){let keyword=arguments.length>0&&arguments[0]!==undefined?arguments[0]:'';try{// 백엔드에서 게시글 목록을 가져옴\nconst endpoint=keyword?\"/boardsell/search?keyword=\".concat(encodeURIComponent(keyword)):'/boardsell';const response=await axios.get(endpoint);console.log('응답 데이터:',response.data);// 응답 데이터 출력\nsetDataList(Array.isArray(response.data)?response.data:[]);}catch(error){console.error('There was an error fetching the posts!',error);}};useEffect(()=>{fetchData();},[]);useEffect(()=>{if(location.state&&location.state.newPost){console.log('새 게시글 추가:',location.state.newPost);setDataList(prevDataList=>[location.state.newPost,...prevDataList]);}},[location.state]);const getNextNo=()=>{return dataList.length>0?Math.max(...dataList.map(post=>post.no))+1:1;};const indexOfLastPost=currentPage*postsPerPage;const indexOfFirstPost=indexOfLastPost-postsPerPage;const currentPosts=dataList.slice(indexOfFirstPost,indexOfLastPost);const handlePageChange=pageNumber=>{setCurrentPage(pageNumber);};const handleSearch=e=>{e.preventDefault();fetchData(searchKeyword);};return/*#__PURE__*/_jsxs(_Fragment,{children:[/*#__PURE__*/_jsx(NavbarTop,{}),/*#__PURE__*/_jsxs(\"div\",{className:\"BoardAll_layout\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"BoardTop_layout\",children:/*#__PURE__*/_jsx(TitleBodyBoard,{title:\"\\uD31D\\uB2C8\\uB2E4\",body:\"\\uD314\\uC544\\uBCF4\\uC138\\uC694\"})}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSearch,className:\"SearchForm\",children:[/*#__PURE__*/_jsx(\"input\",{type:\"text\",value:searchKeyword,onChange:e=>setSearchKeyword(e.target.value),placeholder:\"\\uAC80\\uC0C9\\uC5B4\\uB97C \\uC785\\uB825\\uD558\\uC138\\uC694\"}),/*#__PURE__*/_jsx(\"button\",{type:\"submit\",children:\"\\uAC80\\uC0C9\"})]}),/*#__PURE__*/_jsx(ListBoard,{headersName:['제목','작성자','작성일'],children:currentPosts.length>0?currentPosts.map((item,index)=>/*#__PURE__*/_jsxs(RowListBoard,{children:[/*#__PURE__*/_jsx(ColumnListBoard,{children:/*#__PURE__*/_jsx(Link,{to:\"/boardsell/PostView/\".concat(item.no),style:{textDecoration:'none'},children:/*#__PURE__*/_jsx(\"div\",{className:\"List_title\",children:item.title})})}),/*#__PURE__*/_jsx(ColumnListBoard,{children:item.nickname}),/*#__PURE__*/_jsx(ColumnListBoard,{children:item.created_date})]},index)):/*#__PURE__*/_jsx(\"div\",{children:\"\\uAC8C\\uC2DC\\uAE00\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"})}),/*#__PURE__*/_jsx(CreateButtonBoard,{emotion:\"boardsell\",nextNo:getNextNo()}),/*#__PURE__*/_jsx(\"div\",{className:\"PaginationCustom\",children:/*#__PURE__*/_jsx(PaginationCustom,{currentPage:currentPage,totalPages:Math.ceil(dataList.length/postsPerPage),onPageChange:handlePageChange})})]})]});};export default BoardSell;","map":{"version":3,"names":["React","useState","useEffect","Link","useLocation","axios","TitleBodyBoard","ListBoard","ColumnListBoard","RowListBoard","CreateButtonBoard","PaginationCustom","NavbarTop","jsx","_jsx","jsxs","_jsxs","Fragment","_Fragment","BoardSell","dataList","setDataList","currentPage","setCurrentPage","searchKeyword","setSearchKeyword","postsPerPage","location","fetchData","keyword","arguments","length","undefined","endpoint","concat","encodeURIComponent","response","get","console","log","data","Array","isArray","error","state","newPost","prevDataList","getNextNo","Math","max","map","post","no","indexOfLastPost","indexOfFirstPost","currentPosts","slice","handlePageChange","pageNumber","handleSearch","e","preventDefault","children","className","title","body","onSubmit","type","value","onChange","target","placeholder","headersName","item","index","to","style","textDecoration","nickname","created_date","emotion","nextNo","totalPages","ceil","onPageChange"],"sources":["C:/Users/atwod/OneDrive/바탕 화면/동국대 폴더/백엔드 공부/HackathonProject3_Hanulton/front-end/src/components/board/BoardSell.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport axios from 'axios';\r\n\r\nimport TitleBodyBoard from './element/TitleBodyBoard';\r\nimport ListBoard from './element/ListBoard';\r\nimport ColumnListBoard from './element/ColumnListBoard';\r\nimport RowListBoard from './element/RowListBoard';\r\nimport CreateButtonBoard from './element/CreateButtonBoard';\r\nimport PaginationCustom from './element/PaginationCustom';\r\nimport NavbarTop from '../Navbar/NavbarTop';\r\nimport './Board.css';\r\n\r\nconst BoardSell = () => {\r\n  const [dataList, setDataList] = useState([]);\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  const [searchKeyword, setSearchKeyword] = useState('');\r\n  const postsPerPage = 10;\r\n  const location = useLocation();\r\n\r\n  const fetchData = async (keyword = '') => {\r\n    try {\r\n      // 백엔드에서 게시글 목록을 가져옴\r\n      const endpoint = keyword ? `/boardsell/search?keyword=${encodeURIComponent(keyword)}` : '/boardsell';\r\n\r\n      const response = await axios.get(endpoint);\r\n      console.log('응답 데이터:', response.data); // 응답 데이터 출력\r\n      setDataList(Array.isArray(response.data) ? response.data : []);\r\n    } catch (error) {\r\n      console.error('There was an error fetching the posts!', error);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (location.state && location.state.newPost) {\r\n      console.log('새 게시글 추가:', location.state.newPost);\r\n      setDataList((prevDataList) => [location.state.newPost, ...prevDataList]);\r\n    }\r\n  }, [location.state]);\r\n\r\n  const getNextNo = () => {\r\n    return dataList.length > 0 ? Math.max(...dataList.map((post) => post.no)) + 1 : 1;\r\n  };\r\n\r\n  const indexOfLastPost = currentPage * postsPerPage;\r\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\r\n  const currentPosts = dataList.slice(indexOfFirstPost, indexOfLastPost);\r\n\r\n  const handlePageChange = (pageNumber) => {\r\n    setCurrentPage(pageNumber);\r\n  };\r\n\r\n  const handleSearch = (e) => {\r\n    e.preventDefault();\r\n    fetchData(searchKeyword);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <NavbarTop />\r\n      <div className=\"BoardAll_layout\">\r\n        <div className=\"BoardTop_layout\">\r\n          <TitleBodyBoard title=\"팝니다\" body=\"팔아보세요\" />\r\n        </div>\r\n        <form onSubmit={handleSearch} className=\"SearchForm\">\r\n          <input\r\n            type=\"text\"\r\n            value={searchKeyword}\r\n            onChange={(e) => setSearchKeyword(e.target.value)}\r\n            placeholder=\"검색어를 입력하세요\"\r\n          />\r\n          <button type=\"submit\">검색</button>\r\n        </form>\r\n\r\n        <ListBoard headersName={['제목', '작성자', '작성일']}>\r\n          {currentPosts.length > 0 ? (\r\n            currentPosts.map((item, index) => (\r\n              <RowListBoard key={index}>\r\n                <ColumnListBoard>\r\n                  <Link to={`/boardsell/PostView/${item.no}`} style={{ textDecoration: 'none' }}>\r\n                    <div className=\"List_title\">{item.title}</div>\r\n                  </Link>\r\n                </ColumnListBoard>\r\n                <ColumnListBoard>{item.nickname}</ColumnListBoard>\r\n                <ColumnListBoard>{item.created_date}</ColumnListBoard>\r\n              </RowListBoard>\r\n            ))\r\n          ) : (\r\n            <div>게시글이 없습니다.</div>\r\n          )}\r\n        </ListBoard>\r\n        <CreateButtonBoard emotion=\"boardsell\" nextNo={getNextNo()} />\r\n        <div className=\"PaginationCustom\">\r\n          <PaginationCustom\r\n            currentPage={currentPage}\r\n            totalPages={Math.ceil(dataList.length / postsPerPage)}\r\n            onPageChange={handlePageChange}\r\n          />\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BoardSell;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}